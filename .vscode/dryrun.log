make --dry-run --keep-going --print-directory
make: Entering directory '/home/k/TunnelOS'
bash compile.sh
ld -nostdlib -nostartfiles -T link.ld main.o screen.o stdio.o tunnel.o shell.o cstring.o cint.o panic.o mm.o smt.o keyboard_ps2.o tools.o serial.o idt.o idta.o pit.o window.o fs.o window_welcome.o shell_mouse.o ide.o idea.o event.o fpua.o path.o color.o fonts/text.o fonts/gui.o -o tunnel.x86_64.elf
strip -s -K mmio -K fb -K bootboot -K environment -K initstack tunnel.x86_64.elf
readelf -hls tunnel.x86_64.elf > tunnel.x86_64.txt
rm -rfv fonts_compiled
mkdir fonts_compiled
mv fonts/*.o fonts_compiled/
rm -rv iso
mkdir iso
mkdir iso/tmp
mkdir iso/tmp/mkbootimg
cp bootboot/mkbootimg iso/tmp/mkbootimg/ -r
mkdir iso/tmp/sys
cp tunnelconfig/* .
cp config iso/tmp/sys/
cd iso/tmp/mkbootimg/mkbootimg
make all
cp ../../../../tunnel.x86_64.elf . -r
cp ../../../../tunnel.json . -r
./mkbootimg check tunnel.x86_64.elf
mkdir boot
cp ../../sys boot/ -r
cp tunnel.x86_64.elf boot/sys/core -r
./mkbootimg tunnel.json tunnel.x86_64.img
mv tunnel.x86_64.img ../../../tunnel.x86_64.img -v
cd ../../../
rm -rf tmp
iat tunnel.x86_64.img tunnel.x86_64.iso
du -h tunnel.x86_64.iso
du -h ../tunnel.x86_64.elf
rm -rfv tunnel.x86_64.img
cd ../
rm -rf config tunnel.json
rm -rf *.o fonts/*.o
rm -rf *.elf *.iso
cp iso/tunnel.x86_64.iso .
rm -rf iso
make: Leaving directory '/home/k/TunnelOS'
 
